Docker - platform to run the containers.

* Why: Docker make easy to install and run software without worring about setup or dependencies.

Image - single file wirh all dep and config
Container of instance of container


# See ls of image
docker run -it <image name> ls


# Docker Run
docker run = docker create + docker start


# Create container
docker create hello-world

# Start container
docker start -a <container id>


# logs
docker logs <container id> 


# Stop container use!
docker stop <container id>   


# Kill container
docker kill <container id> 


# Exec a command in specific container ( sh )
docker exec -it <container id> <command>


# Get empty running container with open shall for enter command
docker run it <image name> sh

ex: touch <file>



# CREATE THE IMAGE
Dockerfile->Docker client->Docker server->Usable Image


# Generate image ( dimapol|ironsource/node-mongo-app:lates|1 )
docker build .  # => id
docker build -t <docker id>/<app name>:<version> .



# Run as a container ( lates will get by default )
docker run <docker id>/<app name>


# Alpine - Small image without preinstalled additional programs ( git, etc.. )
FROM node:alpine


# Delete image
docker rmi <image name>|<image id> 


# It's not good to copy local files into container root directory ( to not conflict with the file / folders names )


# Docker compose
it's like docker cli
can be done without docker-compse file, but it's more comfortable
and for starting multiply containers at the same time
and connect them together in utomayed fashion

to connect node and redis containers
 - in connection redis client specify <service name> from docker-compose file


# Run with docker-compose.yml
docker-compose up # will automatically create network between containers

# Run and rebuild with docker-compose.yml
docker-compose up --build




































 

















